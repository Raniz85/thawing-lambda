/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package benchmark

import software.amazon.awssdk.regions.Region
import software.amazon.awssdk.services.lambda.LambdaClient
import java.io.File
import java.io.FileOutputStream
import java.util.concurrent.ConcurrentHashMap
import kotlin.concurrent.thread

fun main(args: Array<String>) {
    val lambda = LambdaClient.builder()
        .region(Region.EU_NORTH_1)
        .build()
    val results = ConcurrentHashMap<String, List<Double>>()
    val threads = args.map { functionName ->
        functionName to thread(start = true, isDaemon = false, name = "Benchmarker-${functionName}") {
            val lambdaFunction = PublishingLambdaFunction(lambda, functionName)
            val n = if (functionName.lowercase().contains("snapstart")) {
                100
            } else {
                200
            }
            results.put(functionName, lambdaFunction.collectResults(n))
        }
    }
    threads.forEach {
        it.second.join()
    }
    println()
    println("Averages:")
    threads.forEach {
        val name = it.first
        val times = results.get(name)!!
        File(name).writeText(times.joinToString("\n"))
        println("%45s: %5.3f ms".format(name, times.sum() / times.size))
    }
}
